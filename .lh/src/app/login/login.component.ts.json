{
    "sourceFile": "src/app/login/login.component.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1712402740299,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1712403047163,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -93,9 +93,9 @@\n     console.log(\"data112\");\r\n \r\n     this.userdata.userName = this.loginForm.value.emaildata;\r\n     this.userdata.password = this.loginForm.value.passworddata;\r\n-    this.userdata.appVersion='V004';\r\n+    this.userdata.appVersion='V003';\r\n     // console.log(\"loginName\", this.userdata.userName);\r\n     // console.log(\"loginPassword\", this.userdata.password);\r\n           console.log(   \"all data setr\" ,this.userdata);\r\n          this.spinner.show();\r\n"
                },
                {
                    "date": 1712403463129,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -93,9 +93,9 @@\n     console.log(\"data112\");\r\n \r\n     this.userdata.userName = this.loginForm.value.emaildata;\r\n     this.userdata.password = this.loginForm.value.passworddata;\r\n-    this.userdata.appVersion='V003';\r\n+    this.userdata.appVersion='V004';\r\n     // console.log(\"loginName\", this.userdata.userName);\r\n     // console.log(\"loginPassword\", this.userdata.password);\r\n           console.log(   \"all data setr\" ,this.userdata);\r\n          this.spinner.show();\r\n"
                },
                {
                    "date": 1712556656081,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -93,9 +93,9 @@\n     console.log(\"data112\");\r\n \r\n     this.userdata.userName = this.loginForm.value.emaildata;\r\n     this.userdata.password = this.loginForm.value.passworddata;\r\n-    this.userdata.appVersion='V004';\r\n+    this.userdata.appVersion='V003';\r\n     // console.log(\"loginName\", this.userdata.userName);\r\n     // console.log(\"loginPassword\", this.userdata.password);\r\n           console.log(   \"all data setr\" ,this.userdata);\r\n          this.spinner.show();\r\n"
                }
            ],
            "date": 1712402740298,
            "name": "Commit-0",
            "content": "import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { NgForm, FormGroup, FormBuilder, Validators, AbstractControl, FormControl } from '@angular/forms';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { NgbCarouselConfig } from '@ng-bootstrap/ng-bootstrap';\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { User } from '../Model/user';\r\nimport { PwaService } from '../_services/pwa.service';\r\nimport { LoginService } from './login.service';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ResponseResult } from '../Model/responseResult';\r\nimport { ComponentPortal } from '@angular/cdk/portal';\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport { Result } from '../Model/result';\r\nimport { Overlay, OverlayRef } from '@angular/cdk/overlay';\r\nimport { AuthTokenService } from './auth-token.service';\r\nimport { ProgressContainerComponentComponent } from '../progress-container-component/progress-container-component.component';\r\nimport { max } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  otpForm: FormGroup;\r\n  showLoginblock = false;\r\n  showEmailBlock = false;\r\n    private user1: User;\r\n  showForgetPasswordBlock = false;\r\n  overlayRef: any;\r\n  constructor(private router: Router,private spinner: NgxSpinnerService,private formBuilder: FormBuilder, private authTokenService: AuthTokenService,private toastr: ToastrService,private overlay: Overlay,private authService: LoginService,) { }\r\n  model:any={};\r\n  loginForm: FormGroup;\r\n  VehicleType:any[];\r\n  forgotPwForm: FormGroup;\r\n  \r\n  emailPattern12 = '^[a-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,4}$';\r\n  http: any;\r\n  authToken: any;\r\n  decodeToken: any;\r\n  jwtHelper: any;\r\n  userInfo: any;\r\n  isAuthenticated: boolean;\r\n  ngZone: any;\r\n\r\n  result: ResponseResult;\r\n  loginResult: Result;\r\n  //router: any;\r\n  authStatusListener: any;\r\n  private userdata:User;\r\n  loginstatus:boolean=false;\r\n \r\n ngOnInit(): void {\r\n  this.userdata = new User();\r\n   this.getsecure();\r\n   this.VehicleType=[];\r\n   this.showLoginblock = true;\r\n   this.user1 = new User();\r\n }\r\n getsecure()\r\n {\r\n  this.loginForm = new FormGroup({\r\n    emaildata:  new FormControl('', [Validators.required],),\r\n \r\n    passworddata:new  FormControl('',[Validators.required],)\r\n \r\n  });\r\n }\r\n\r\n\r\n\r\n \r\n  emailPattern(emailPattern: any) {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  onLoginSubmit()\r\n  {\r\n    console.log(\"data112\");\r\n\r\n    this.userdata.userName = this.loginForm.value.emaildata;\r\n    this.userdata.password = this.loginForm.value.passworddata;\r\n    this.userdata.appVersion='V004';\r\n    // console.log(\"loginName\", this.userdata.userName);\r\n    // console.log(\"loginPassword\", this.userdata.password);\r\n          console.log(   \"all data setr\" ,this.userdata);\r\n         this.spinner.show();\r\n  \r\n\r\n\r\n  \r\n  this.authTokenService.loginUser(this.userdata);\r\n  this.authTokenService.getAuthStatusListener().subscribe(\r\n    (r: any) => {\r\n      \r\n      this.hideOverlay();\r\n      this.spinner.hide();\r\n      this.result = r;\r\n      console.log('user details in component', this.result);\r\n     // this.userId = r.appuser.id;\r\n    // console.log('userid', this.userId);\r\n       if (this.result.status === 200) {\r\n        \r\n        this.toastr.success(this.result.message);\r\n       // this.loginForm.get('email').disable();\r\n\r\n        this.loginstatus=true;\r\n\r\n      }\r\n      else if(this.result.status === 401) {\r\n        this.toastr.error(this.result.message);\r\n      }\r\n      else if(this.result.status === 500) {\r\n        this.toastr.error('Internal server Error');\r\n      }\r\n      else {\r\n        this.toastr.error(this.result.message);\r\n      }\r\n    },\r\n    (error) => {\r\n      this.loginResult.message = error.message;\r\n      this.loginResult.statusCode = error.statusCode;\r\n      //this.hideOverlay();\r\n      this.toastr.error(error.message);\r\n      /* console.log('errorr', error.message); */\r\n    }\r\n  );\r\n\r\n\r\n   \r\n\r\n//console.log(this.loginForm.value.emaildata);\r\n\r\n        // this.router.navigate(['/dashboard']);\r\n  // this.http.post('', this.user)\r\n  //   .subscribe(r => {\r\n  //    // console.log(\"r ka value\", r);\r\n  //     //if codf{}\r\n  //     if (r.status === 200 ) {\r\n        \r\n      \r\n\r\n  //     }\r\n\r\n  // });\r\n\r\n  //console.log(\"loginPassword\", this.user.password);\r\n\r\n\r\n    // console.log(this.loginForm.value);\r\n    // var data112= this.loginForm.value ;\r\n   // console.log(data112);\r\n\r\n    \r\n    \r\n  }\r\n\r\n  getEmailForOTP(){\r\n    console.log('Login Forgot');\r\n    this.otpForm = this.formBuilder.group({\r\n      email: ['', [Validators.required, Validators.minLength(4),\r\n        Validators.maxLength(6)]]\r\n    });\r\n    this.showEmailBlock = true;\r\n    this.showForgetPasswordBlock = false;\r\n    this.showLoginblock = false;\r\n  }\r\n  LoginFormVisibality(){\r\n    this.showEmailBlock = false;\r\n    this.showForgetPasswordBlock = false;\r\n    this.showLoginblock = true;\r\n  }\r\n  resetPassword(){\r\n    this.forgotPwForm = this.formBuilder.group({\r\n      'userOTP':['',[Validators.required]],\r\n      'password': ['',[Validators.required, Validators.pattern('(?=\\\\D*\\\\d)(?=[^a-z]*[a-z])(?=[^A-Z]*[A-Z]).{8,30}')]],\r\n      'confirmPassword': ['',RxwebValidators.compare({fieldName:'password'})]\r\n    });\r\n    this.showForgetPasswordBlock =  true;\r\n    this.showEmailBlock = false;\r\n    this.showLoginblock = false;\r\n  }\r\n  onEmailSubmit(){\r\n    if (!this.otpForm.valid) {\r\n      return;\r\n    }\r\n    this.spinner.show();\r\n\r\n    this.user1.userName = this.otpForm.value.email;\r\n\r\n    this.authTokenService.generateOTP(this.user1);\r\n\r\n    this.authTokenService.getOTPStatusListener().subscribe(\r\n      (r:any) =>{\r\n        this.spinner.hide();\r\n        this.result = r;\r\n       // console.log(\"r ka value otp in component\", this.result);\r\n        if (this.result.status === 200){\r\n          this.toastr.success(this.result.message);\r\n         /*  this.showEmailBlock = false;\r\n          this.showForgetPasswordBlock = true;\r\n          this.showLoginblock = false; */\r\n          this.resetPassword();\r\n        }\r\n       else if (this.result.status != 200){\r\n          this.toastr.success(this.result.message);\r\n         /*  this.showEmailBlock = false;\r\n          this.showForgetPasswordBlock = true;\r\n          this.showLoginblock = false; */\r\n        \r\n        }\r\n      }\r\n    )\r\n\r\n  }\r\n  onPasswordChange(){\r\n    if (!this.otpForm.valid) {\r\n      return;\r\n    }\r\n    this.spinner.show();\r\n    this.user1.userOTP = this.forgotPwForm.value.userOTP;\r\n    this.user1.password = this.forgotPwForm.value.password;\r\n     this.authTokenService.changePassword(this.user1);\r\n    this.authTokenService.getPasswordListener().subscribe(\r\n      (r: any) =>{\r\n        this.spinner.hide();\r\n        this.result = r;\r\n        if(this.result.status === 200){\r\n          this.toastr.info(this.result.message);\r\n          this.showForgetPasswordBlock=false;\r\n          this.showLoginblock=true;\r\n          this.router.navigate(['/']);\r\n          // this.createLoginForm();\r\n        }\r\n\r\n      else  if(this.result.status != 200){\r\n          this.toastr.info(this.result.message);\r\n          // this.router.navigate(['']);\r\n          // this.createLoginForm();\r\n        }\r\n      }\r\n    );\r\n  }\r\n  hideOverlay() {\r\n    if (this.overlayRef) {\r\n      this.overlayRef.detach();\r\n      this.overlayRef.dispose();\r\n    }\r\n  }\r\n  showOverlay() {\r\n    this.overlayRef = this.overlay.create({\r\n      positionStrategy: this.overlay\r\n        .position()\r\n        .global()\r\n        .centerHorizontally()\r\n        .centerVertically(),\r\n      hasBackdrop: true,\r\n    });\r\n    this.overlayRef.attach(new ComponentPortal(ProgressContainerComponentComponent));\r\n  }\r\n  user<T>(arg0: string, user: any) {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n  saveTokenData(authToken: any, arg1: null, user: any) {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n}\r\n"
        }
    ]
}